# This configuration file is used by the Nginx web server to route requests to different services
# based on the request URL. It defines upstream servers for load balancing and specifies how
# different types of requests are handled.

# Define upstream servers for load balancing
upstream healthmanagement {
    server healthmanagement-service.glucocare-services:8000;  # Health management service
}

upstream chat {
    server chat-service.glucocare-services:8000;  # Chat service
}

# Main server configuration
server {
	listen 80;  # Listen on port 80 for HTTP requests

	# Route API requests to the health management service
	location /api/ {
		proxy_pass http://healthmanagement;
	}

	# # Route new login requests to the health management service
	location /login_new {
  		proxy_pass http://healthmanagement;
	}

	# # Route admin panel requests to the health management service
	location /admin {
  		proxy_pass http://healthmanagement;
	}

	# # Route requests for getting details to the health management service
	location /getDetails {
  		proxy_pass http://healthmanagement;
	}
	
	# # Route chat requests to the chat service
	location /chat/ {
		proxy_pass http://chat;
	}

	# Serve Django static files from the health management app
	location /django_static/ {
    	alias /app/healthcare_project/staticfiles/;  
    }

	# Serve Django media files from the health management app
	location /media/  {
	    alias /app/healthcare_project/media/;  
    }

	# Serve React static files from the frontend build directory
    location /static/ {
        alias /usr/share/nginx/html/build/static/;  
    }

	# Main location block to serve the React app, handling all other requests
    location / {
        root /usr/share/nginx/html/build;  
        try_files $uri $uri/ /index.html;  # Serve index.html for any paths not matched by other locations
    }

	location /ws/chat/ {
    	proxy_pass http://chat;
    	proxy_http_version 1.1;
    	proxy_set_header Upgrade $http_upgrade;
    	proxy_set_header Connection "upgrade";
    	proxy_set_header Host $http_host;
    	proxy_set_header X-Real-IP $remote_addr;
    	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    	proxy_set_header X-Forwarded-Proto $scheme;
    	proxy_set_header X-Forwarded-Host $host;
    	proxy_set_header X-Forwarded-Port $server_port;
	}


}

